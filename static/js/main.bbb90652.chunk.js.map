{"version":3,"sources":["githubApi.js","App.js","index.js"],"names":["githubURL","tableToJSON","table","developers","TableNode","Array","from","html","t","document","createElement","innerHTML","content","cloneNode","parseHTML","querySelector","children","splice","i","length","row","cells","developer","NumberOfProjects","attributes","value","name","innerText","trim","href","undefined","projects","push","URL","description","j","shuffle","fetchProjects","a","openSourceProjects","fetch","then","payload","text","DevInfo","useState","closed","handleOnClose","page","pageChange","handelActivePageChange","event","className","footer","variant","onClick","icon","faCode","label","title","style","padding","margin","src","assistiveText","size","height","width","target","isOpen","onRequestClose","color","backgroundColor","textAlign","paddingBottom","project","fontSize","getProjectContent","pages","activePage","onChange","direction","App","loadDevelopers","useEffect","fetchDev","map","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bbb90652.chunk.js","sourcesContent":["import shuffle from \"shuffle-array\";\r\n\r\nconst githubURL =\r\n  \"https://raw.githubusercontent.com/SaudiOpenSourceCommunity/SaudiOSS/master/README.md\";\r\n\r\nfunction parseHTML(html) {\r\n  var t = document.createElement(\"template\");\r\n  t.innerHTML = html;\r\n  return t.content.cloneNode(true);\r\n}\r\n\r\n//This looks ugly üôÅ but could not figure out better way to do it.\r\nfunction tableToJSON(table) {\r\n  const developers = [];\r\n  const TableNode = Array.from(\r\n    parseHTML(table).querySelector(\"tbody\").children\r\n  ).splice(1);\r\n  for (let i = 0; i < TableNode.length; i++) {\r\n    let row = TableNode[i].cells;\r\n    const developer = {};\r\n    developer.NumberOfProjects = row[0].attributes[0].value;\r\n    developer.name = row[0].innerText.trim();\r\n    developer.githubURL = row[0].children[0]\r\n      ? row[0].children[0].href.trim()\r\n      : undefined;\r\n    developer.projects = [];\r\n    developer.projects.push({\r\n      name: row[1].innerText.trim(),\r\n      URL: row[1].children[0].href.trim(),\r\n      description: row[2].innerText.trim()\r\n    });\r\n    for (let j = 1; j < developer.NumberOfProjects; j++) {\r\n      row = TableNode[++i].cells;\r\n      developer.projects.push({\r\n        name: row[0].innerText.trim(),\r\n        URL: row[0].children[0].href.trim(),\r\n        description: row[1].innerText.trim()\r\n      });\r\n    }\r\n    developers.push(developer);\r\n  }\r\n  return shuffle(developers);\r\n}\r\n\r\nexport default async function fetchProjects() {\r\n  let openSourceProjects = [];\r\n  openSourceProjects = await fetch(githubURL).then(payload => payload.text());\r\n  return tableToJSON(openSourceProjects);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Avatar,\r\n  Modal,\r\n  Badge,\r\n  Pagination\r\n} from \"react-rainbow-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCode } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./App.css\";\r\nimport fetchProjects from \"./githubApi\";\r\n\r\nfunction App() {\r\n  const [developers, loadDevelopers] = useState([]);\r\n  useEffect(() => {\r\n    const fetchDev = async () => {\r\n      const developers = await fetchProjects();\r\n      loadDevelopers(developers);\r\n    };\r\n    fetchDev();\r\n  }, []);\r\n  if (developers.length === 0) return <></>;\r\n  return (\r\n    <div className=\"devs-container\">\r\n      {developers.map(developer => (\r\n        <DevInfo developer={developer} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DevInfo({ developer }) {\r\n  const [closed, handleOnClose] = useState(false);\r\n  const [page, pageChange] = useState(1);\r\n\r\n  const getProjectContent = () => {\r\n    const project = developer.projects[page - 1];\r\n    return (\r\n      <>\r\n        <div>\r\n          <a target=\"_blank\" href={project.URL}>\r\n            <b style={{ fontSize: \"1.5em\" }}>{project.name}</b>\r\n          </a>\r\n        </div>\r\n        <div>{project.description}</div>\r\n      </>\r\n    );\r\n  };\r\n  const handelActivePageChange = (event, page) => pageChange(page);\r\n  const getGitHubURL = () => {\r\n    if (developer.githubURL)\r\n      return (\r\n        <h1 className=\"rainbow-p-top_large rainbow-font-size-heading_small rainbow-color_dark-1\">\r\n          <a target=\"_blank\" href={developer.githubURL}>\r\n            {developer.name}\r\n          </a>\r\n        </h1>\r\n      );\r\n    return (\r\n      <h1 className=\"rainbow-p-top_large rainbow-font-size-heading_small rainbow-color_dark-1\">\r\n        {developer.name}\r\n      </h1>\r\n    );\r\n  };\r\n  const getPagination = () => {\r\n    if (developer.projects.length > 1)\r\n      return (\r\n        <Pagination\r\n          className=\"rainbow-m_auto\"\r\n          pages={developer.projects.length}\r\n          activePage={page}\r\n          onChange={handelActivePageChange}\r\n          style={{ direction: \"ltr\" }}\r\n        />\r\n      );\r\n    return <></>;\r\n  };\r\n  return (\r\n    <div className=\"rainbow-m-around_large item\">\r\n      <Card\r\n        footer={\r\n          <>\r\n            <Button\r\n              variant=\"brand\"\r\n              className=\"rainbow-m-around_medium\"\r\n              onClick={() => handleOnClose(true)}\r\n            >\r\n              ÿßŸÑŸÖÿ¥ÿßÿ±Ÿäÿπ ÿßŸÑÿ®ÿ±ŸÖÿ¨Ÿäÿ©\r\n              <FontAwesomeIcon\r\n                icon={faCode}\r\n                className=\"rainbow-m-left_medium\"\r\n              />\r\n              <Badge\r\n                className=\"rainbow-m-around_xx\"\r\n                label={developer.projects.length}\r\n                title=\"the badge title\"\r\n                style={{ padding: \"0.25em 0.50em\", margin: \"-2em -1em 1.5em\" }}\r\n              />\r\n            </Button>\r\n          </>\r\n        }\r\n      >\r\n        <div className=\"rainbow-p-around_xx-large rainbow-align-content_center rainbow-flex_column\">\r\n          <Avatar\r\n            src={`${developer.githubURL}.png`}\r\n            assistiveText={developer.name}\r\n            title={developer.name}\r\n            size=\"large\"\r\n            style={{ height: \"5.2rem\", width: \"5.2rem\" }}\r\n          />\r\n          {getGitHubURL()}\r\n        </div>\r\n        <Modal\r\n          isOpen={closed}\r\n          onRequestClose={() => handleOnClose(false)}\r\n          title=\"ÿßŸÑŸÖÿ¥ÿßÿ±Ÿäÿπ\"\r\n          footer={\r\n            <div className=\"rainbow-flex rainbow-justify_spread\">\r\n              <Avatar\r\n                src={`${developer.githubURL}.png`}\r\n                assistiveText={developer.name}\r\n                title={developer.name}\r\n                size=\"large\"\r\n              />\r\n              <Badge\r\n                className=\"rainbow-m-around_medium\"\r\n                label={developer.name}\r\n                style={{\r\n                  color: \"white\",\r\n                  backgroundColor: \"green\"\r\n                }}\r\n              />\r\n            </div>\r\n          }\r\n        >\r\n          <div style={{ textAlign: \"center\", paddingBottom: \"2em\" }}>\r\n            {getProjectContent()}\r\n          </div>\r\n          {getPagination()}\r\n        </Modal>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}